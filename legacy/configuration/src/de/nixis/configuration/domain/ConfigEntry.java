package de.nixis.configuration.domain;

import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.validator.NotNull;

/**
 * Configuration Entry stored in database
 * @author Dummdoedel
 */
@Entity
@Table(
name = "configuration",
uniqueConstraints = {
    @UniqueConstraint(columnNames = {"id"}),
    @UniqueConstraint(columnNames = {"name"})
})
@NamedQueries(value = {
    @NamedQuery(name = "ConfigEntry.getByKey", query = "SELECT c FROM ConfigEntry c WHERE c.key = :key"),
    @NamedQuery(name = "ConfigEntry.getAll", query = "SELECT c FROM ConfigEntry c ORDER BY c.key")
})
public class ConfigEntry implements Serializable {

    private static final long serialVersionUID = 1535351L;
    
    @Id
    @GeneratedValue
    @Column(name = "id")
    private Long id;

    @NotNull
    @Column(name = "name")
    private String key;

    @NotNull
    @Column(name = "value")
    private String value;

    @NotNull
    @Column(name = "autogenerated")
    private boolean autogenerated = true;
    
    /**
     * Public non-arg constructor for EJB3-layer
     */
    public ConfigEntry() {}

    /**
     * Creates a new config entry with the given key and value
     * @param key
     * @param value
     */
    public ConfigEntry(final String key, final String value) {
        this(key, value, false);
    }

    /**
     * Creates a new config entry with the given arguments
     * @param key
     * @param value
     * @param autogenerated
     */
    public ConfigEntry(final String key, final String value, boolean autogenerated) {
        this.key = key;
        this.value = value;
        this.autogenerated = autogenerated;
    }

    /**
     * Returns the id
     * @return
     */
    public Long getId() {
        return id;
    }

    /**
     * Returns the key of this entry
     * @return
     */
    public String getKey() {
        return key;
    }

    /**
     * Sets the key of this entry
     * @param key
     */
    public void setKey(final String key) {
        this.key = key;
    }

    /**
     * Gets the value of this entry
     * @return
     */
    public String getValue() {
        return value;
    }

    /**
     * Sets the value of this entry
     * @param value
     */
    public void setValue(final String value) {
        this.value = value;
    }

    /**
     * Gets the auto-generated flag of this entry
     * @return
     */
    public boolean isAutogenerated() {
        return autogenerated;
    }

    /**
     * Hash code method
     * @return
     */
    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    /**
     * Returns true if the reciever equals the argument
     * @param object
     * @return
     */
    @Override
    public boolean equals(Object object) {
        if (!(object instanceof ConfigEntry)) {
            return false;
        }
        ConfigEntry other = (ConfigEntry) object;
        if ((this.key == null && other.key != null) || (this.key != null && !this.key.equals(other.key))) {
            return false;
        }
        return true;
    }

    /**
     * Returns a string representation of the reciever
     * @return
     */
    @Override
    public String toString() {
        return "de.nixis.configuration.domain.ConfigEntry[key='" + key + "']";
    }
}